<?xml version="1.0" encoding="utf-8"?>
<section id="set_command">
  <title>set command</title>
  <simplesect role="usage" id="gen-000">
    <title>Usage</title>
    <para>
      <literal>set <ulink url="s_xpath.html">xpath</ulink> [<ulink url="s_xpath.html">xpath</ulink>]</literal>
    </para>
  </simplesect>
  <simplesect role="description" id="gen-001"><title>Description</title>
	  <para>This command provides very easy way to create
            or modify content of a document.
            It takes two XPath expressions. The first one
	    should be a node location path which specifies the target node,
	    the second is optional and provides new content for the target
            node.
	    If a node matches the first XPath expression, then its content
	    is replaced with the given value. If no node matches, then XSH2 tries
	    to magically extend the current document by adding nodes in order to
            add missing steps of the location path so as to make the expression
	    match a node. This node is then populated with
	    a copy of the content value (either text or, if the content <ulink url="s_xpath.html">xpath</ulink> results in a node-list and the target
            node is an element, nodes).
	  </para>
	  <example id="gen-002">
	    <title>Try the following on an empty scratch document</title>
	    <programlisting>$scratch/&gt; ls /
&lt;scratch/&gt;
$scratch/&gt; set scratch/@say "hallo world"
&lt;scratch say="hello world"/&gt;

$scratch/&gt; set scratch/foo[2]/../foo[1]/following-sibling::bar/baz[3] "HALLO"
$scratch/&gt; ls /
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;scratch say="hello world"&gt;
  &lt;foo/&gt;
    &lt;bar&gt;
      &lt;baz/&gt;
      &lt;baz/&gt;
      &lt;baz&gt;HALLO&lt;/baz&gt;
    &lt;/bar&gt;
  &lt;foo/&gt;
&lt;scratch/&gt;
</programlisting>
	  </example>
	  <para>
	    Only a limited subset of XPath is currently supported by
	    this command. Namely, the XPath expression must be a
	    location path consisting of a /-separated sequence of one
	    or more location steps and new nodes
	    can only be magically created along the child, sibling, or
	    attribute axes.
	    The node-test part of the expression
	    can neither be a wildcard (<literal>*</literal>,
	    <literal>@*</literal>, <literal>prefix:*</literal>, ...),
	    nor the <literal>node()</literal> function. If a namespace
	    prefix is used, then either the namespace must already be
	    declared in the document or registered with XSH. 
	  </para>
	  <para>
	    Location steps may contain arbitrary predicates (filters), however,
	    only a limited subset is supported for magically created
	    nodes.
	    In particular, if a filter predicate of a location step
	    specifies a position of a node (e.g. with
	    <literal>[4]</literal>, or
	    <literal>[position()&gt;3]</literal>, etc), then the
	    parser tries to automatically create empty siblings nodes
	    until it finally creates one with for which the predicate
	    is true.
	  </para>
	  <para>
	    Note, that this command only processes one location step
	    at a time and always picks the first matching node. So,
	    expressions like <literal>/root/a/b</literal> are treated
	    as <literal>/root/a[1]/b[1]</literal>.  This means that an
	    expression <literal>/root/a/b</literal> will magically
	    create element <literal>&lt;b&gt;</literal> in a first
	    matching <literal>&lt;a&gt;</literal> even if some
	    following <literal>&lt;a&gt;</literal> already contains a
	    <literal>&lt;b&gt;</literal>.
	  </para>
	  <para>
	    To prevent this, either explicitly state that <literal>b</literal> must
	    exist with e.g. <literal>/root/a[b]/b</literal> or make the corresponding
	    element <literal>&lt;a&gt;</literal> the context
	    node and use a relative location path:
	  </para>
	  <example id="gen-003">
	    <programlisting>for /root/a/b set b 'foo'</programlisting>
	  </example>
	</simplesect>
  <simplesect id="gen-004">
    <title>Sections</title>
    <para>
      <ulink url="s_Manipulation.html">Tree modification</ulink>
    </para>
  </simplesect>
</section>
