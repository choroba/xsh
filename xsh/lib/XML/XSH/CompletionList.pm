package XML::XSH::CompletionList;

use strict;
use vars qw(@XSH_COMMANDS);

@XSH_COMMANDS=qw(
.
?
add
assign
backups
call
cd
chdir
chxpath
clone
close
complete_attributes
copy
count
cp
create
debug
def
define
defs
del
delete
dtd
dup
echo
encoding
eval
exec
exit
files
flags
for
foreach
get
help
if
include
indent
insert
keep_blanks
lcd
list
load_ext_dtd
load_xinclude
load_xincludes
locate
ls
map
move
mv
new
nobackups
nodebug
open
open_HTML
open_PIPE
options
parser_expands_entities
parser_expands_xinclude
pedantic_parser
perl
print
print_enc_command
print_value
process
process_xinclude
process_xincludes
prune
pwd
query-encoding
quiet
quit
recovering
remove
rm
run-mode
save
save_HTML
save_as
save_xinclude
saveas
sed
select
system
test-mode
transform
unless
valid
validate
validation
var
variables
vars
verbose
version
while
xadd
xcopy
xcp
xinclude
xincludes
xinsert
xmove
xmv
xsl
xslt
xsltproc
xupdate
);

1;
