package XML::XSH::CompletionList;

use strict;
use vars qw(@XSH_COMMANDS @XSH_NOXPATH_COMMANDS);

@XSH_COMMANDS=qw(
.
?
add
assign
backups
call
catalog
cd
chdir
chxpath
clone
close
complete-attributes
complete_attributes
copy
count
cp
create
debug
def
define
defs
del
delete
doc-info
doc_info
docs
documents
dtd
dup
echo
enc
encoding
eval
exec
exit
files
flags
fold
for
foreach
get
help
if
include
indent
insert
iterate
keep-blanks
keep_blanks
last
lcd
list
load-ext-dtd
load-xinclude
load-xincludes
load_ext_dtd
load_xinclude
load_xincludes
local
locate
ls
map
move
mv
namespaces
new
next
nobackups
nodebug
normalize
open
options
parser-completes-attributes
parser-expands-entities
parser-expands-xinclude
parser_completes_attributes
parser_expands_entities
parser_expands_xinclude
pedantic-parser
pedantic_parser
perl
prev
print
print_value
process
process-xinclude
process-xincludes
process_xinclude
process_xincludes
prune
pwd
query-encoding
query_encoding
quiet
quit
recovering
redo
regfunc
register-function
register-namespace
register-xhtml-namespace
register-xsh-namespace
regns
regns-xhtml
regns-xsh
remove
rename
return
rm
run-mode
run_mode
save
sed
select
sort
stream
strip-whitespace
strip_whitespace
switch-to-new-documents
switch_to_new_documents
system
test-mode
test_mode
throw
transform
try
undef
undefine
unfold
unless
unregfunc
unregister-function
unregister-namespace
unregns
valid
validate
validation
var
variables
vars
verbose
version
while
xadd
xcopy
xcp
xinclude
xincludes
xinsert
xmove
xmv
xpath-axis-completion
xpath-completion
xpath_axis_completion
xpath_completion
xsl
xslt
xsltproc
xupdate
);

1;
@XSH_NOXPATH_COMMANDS=qw(
assign
local
options
XML::LibXML::Element=SCALAR(0x82699f4)
defs
include
XML::LibXML::Element=SCALAR(0x82699d0)
call
help
XML::LibXML::Element=SCALAR(0x82699dc)
exec
XML::LibXML::Element=SCALAR(0x82699f4)
xslt
XML::LibXML::Element=SCALAR(0x82699dc)
XML::LibXML::Element=SCALAR(0x8269a0c)
XML::LibXML::Element=SCALAR(0x8269a24)
XML::LibXML::Element=SCALAR(0x8269a3c)
documents
XML::LibXML::Element=SCALAR(0x82699f4)
XML::LibXML::Element=SCALAR(0x82699e8)
variables
XML::LibXML::Element=SCALAR(0x82699dc)
XML::LibXML::Element=SCALAR(0x8269a00)
lcd
XML::LibXML::Element=SCALAR(0x82699f4)
insert
XML::LibXML::Element=SCALAR(0x82699dc)
xinsert
XML::LibXML::Element=SCALAR(0x82699f4)
clone
XML::LibXML::Element=SCALAR(0x82699dc)
perl
XML::LibXML::Element=SCALAR(0x82699f4)
print
XML::LibXML::Element=SCALAR(0x82699dc)
sort
map
XML::LibXML::Element=SCALAR(0x82699f4)
rename
close
select
open
create
XML::LibXML::Element=SCALAR(0x82699d0)
save
dtd
enc
validate
valid
exit
XML::LibXML::Element=SCALAR(0x82699f4)
process-xinclude
XML::LibXML::Element=SCALAR(0x82699dc)
XML::LibXML::Element=SCALAR(0x8269a0c)
XML::LibXML::Element=SCALAR(0x82699e8)
XML::LibXML::Element=SCALAR(0x8269a54)
XML::LibXML::Element=SCALAR(0x8269a48)
XML::LibXML::Element=SCALAR(0x8269a18)
XML::LibXML::Element=SCALAR(0x8269a84)
XML::LibXML::Element=SCALAR(0x8269a9c)
XML::LibXML::Element=SCALAR(0x8269ab4)
pwd
xupdate
redo
next
prev
last
return
throw
catalog
register-namespace
XML::LibXML::Element=SCALAR(0x82699f4)
unregister-namespace
XML::LibXML::Element=SCALAR(0x82699d0)
register-xhtml-namespace
XML::LibXML::Element=SCALAR(0x82699f4)
register-xsh-namespace
XML::LibXML::Element=SCALAR(0x82699d0)
register-function
XML::LibXML::Element=SCALAR(0x82699f4)
unregister-function
XML::LibXML::Element=SCALAR(0x82699d0)
stream
xpath-completion
XML::LibXML::Element=SCALAR(0x82699f4)
xpath-axis-completion
XML::LibXML::Element=SCALAR(0x82699dc)
doc-info
XML::LibXML::Element=SCALAR(0x82699f4)
);

1;
